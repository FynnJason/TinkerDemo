apply plugin: 'com.android.application'
// 依赖插件脚本
apply from: 'tinker-support.gradle'
// 依赖美团多渠道打包插件
apply plugin: 'walle'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "app.fynnjason.tinkerdemo"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 3
        versionName "1.0.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi', 'x86'//,'x86_64' ,'armeabi-v7a' , 'arm64-v8a'
        }

        multiDexEnabled true // 解决65536方法数

    }

    // 签名配置
    signingConfigs {

        release {
            try {
                storeFile file("./keystore/release.keystore")
                storePassword "testres"
                keyAlias "testres"
                keyPassword "testres"
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }

        debug {
            storeFile file("./keystore/debug.keystore")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    // 解决65536方法数
    implementation 'com.android.support:multidex:1.0.3'
    // bugly Java崩溃收集和版本更新
    implementation 'com.tencent.bugly:crashreport_upgrade:1.4.0'
    // bugly native 崩溃收集
    implementation 'com.tencent.bugly:nativecrashreport:3.7.1'
    // tinker
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.9'
    // 美团多渠道打包
    implementation 'com.meituan.android.walle:library:1.1.6'
}

// 设置美团多渠道打包的参数
walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels");
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk';
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")
}
